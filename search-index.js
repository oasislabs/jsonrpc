var N=null,E="",T="t",U="u",searchIndex={};
var R=["compatibility","string","either","futureresult","with_compatibility","handle_request","futureresponse","futureoutput","handle_rpc_request","request","futurerpcresult","handle_call","handle_request_sync","Handle given request synchronously - will block until…","add_alias","add_method","add_method_with_meta","add_notification","add_notification_with_meta","jsonrpc_core","jsonrpc_core::types","Notification","A String specifying the version of the JSON-RPC protocol.","A String containing the name of the method to be invoked.","A Structured value that holds the parameter values to be…","MethodCall","jsonrpc_core::types::request","jsonrpc","result","Correlation id","Success","Failure","invalid_request","version","option","Protocol Version","Call method","params","Execute notification","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","jsonrpc_core::delegates","borrow","typeid","jsonrpc_core::middleware","to_string","jsonrpc_core::types::error","jsonrpc_core::types::id","jsonrpc_core::types::params","jsonrpc_core::types::response","jsonrpc_core::types::version","formatter","metaiohandler","augment","into_iter","default","iohandler","errorcode","response","methodcall","notification","success","failure","coreresult","serialize","deserialize","RemoteProcedure","Compatibility","MetaIoHandler","IoHandler","IoDelegate","Middleware","ErrorCode","Response","RpcMethod","RpcMethodSimple","RpcNotification","RpcNotificationSimple","IoHandlerExtension","accesscontrolalloworigin","allowcors","jsonrpc_server_utils","executor","Initializes executor. In case there is no shared executor,…","taskexecutor","sessionid","jsonrpc_server_utils::cors","jsonrpc_server_utils::hosts","jsonrpc_server_utils::reactor","jsonrpc_server_utils::codecs","deref_mut","from_str","ordering","matches","originprotocol","accesscontrolallowheaders","domainsvalidation","separator","OriginProtocol","AccessControlAllowOrigin","AccessControlAllowHeaders","AllowCors","DomainsValidation","UninitializedExecutor","RpcEventLoop","SessionStats","SuspendableStream","Separator","StreamCodec","Adds async method to the delegate.","Adds async method with metadata to the delegate.","Adds notification to the delegate.","add_subscription","jsonrpc_pubsub","Consumes `Subscriber` and assigns unique id to a requestor.","subscriptionid","Rejects this subscription request with given error.","Subscriber","reject_async","Reject subscription with given error.","assign_id","assign_id_async","Assign id to this subscriber. This method consumes…","sinkresult","subscriber","jsonrpc_pubsub::oneshot","jsonrpc_pubsub::typed","start_send","startsend","poll_complete","SubscriptionId","PubSubHandler","SubscribeRpcMethod","UnsubscribeRpcMethod","PubSubMetadata","ServerBuilder","Separator for enveloping messages in streaming codecs","No envelope is expected between messages. Decoder will try…","Byte is used as an sentitel between messages","socketaddr","pushmessageerror","Creates new `ServerBuilder` wih given `IoHandler`","dispatcher","RequestContext","PushMessageError","Dispatcher","MetaExtractor","Request Origin","Specifies if domains should be validated.","AllowOnly","Allow only domains on the list.","Disable domains validation completely.","Host type","SessionId","Session id","Keeps track of open sessions","open_session","Executed when new session is opened.","close_session","Executed when session is closed.","Request context","jsonrpc_ws_server","broadcaster","metaextractor","with_meta_extractor","Creates new `ServerBuilder`","event_loop_executor","session_meta_extractor","sessionstats","requestmiddleware","Starts a new `WebSocket` server in separate thread.…","requestcontext","closehandle","Creates new origin given protocol, hostname and port…","Attempts to parse given string as a `Origin`. NOTE: This…","Creates a new `Host` given hostname and port number.","Attempts to parse given string as a `Host`. NOTE: This…","MiddlewareAction","CloseHandle","Broadcaster","RequestMiddleware","NoopExtractor","jsonrpc_http_server","Origins allowed to access","Specific hostname","null-origin (file:///, sandboxed iframe)","Any non-null origin","CORS response headers","NotRequired","CORS header was not required. Origin is not present in the…","CORS header is not returned, Origin is not allowed to…","CORS header to include in the response. Origin is allowed…","jsonrpc_http_server::RequestMiddlewareAction","headervalue","internal_error","on_request","Creates new `ServerBuilder` for given `IoHandler`.","cors_allow_headers","jsonrpc_http_server::cors","equivalent","RequestMiddlewareAction","ServerHandler","`Incoming` is a stream of incoming sockets Polling the…","CORS handling utility functions","Case Insensitive wrapper of Ascii strings.","Origin Protocol","Http protocol","Https protocol","Custom protocol","Headers allowed to access","Specific headers","Any header","get_cors_allow_origin","Returns correct CORS header (if any) given list of allowed…","get_cors_allow_headers","Validates if the `AccessControlAllowedHeaders` in the…","Maps `Ok` variant of `AllowCors`.","Disabled","construct a new Suspendable stream, given tokio::Incoming…","partial_cmp","into_unicase","into_inner","close_handle","Utilize existing event loop executor to poll RPC results.","allowed_hosts","request_middleware","serverbuilder","securityattributes","SecurityAttributes","request_separators","Sets the incoming and outgoing requests separator","Closes the server (waits for finish)","Wait for the server to finish","Metadata extractor (per session)","Extracts metadata from request context","session_id","session_stats","Session stats","jsonrpc_client_transports::transports","thandler","tmetadata","Connect to a JSON-RPC websocket server.","jsonrpc_client_transports","rpcerror","call_method","subscribe","jsonrpc_client_transports::transports::duplex","into_future","jsonrpc_client_transports::transports::local","rawclient","clientresponse","rpcmessage","rpcchannel","backtrace","asyncsink","ClientResponse","RequestBuilder","RpcFuture","SubscriptionStream","TypedSubscriptionStream","RawClient","TypedClient","RpcChannel","ParseError","transports","Client transport implementations","Duplex transport","The Duplex handles sending and receiving asynchronous…","Creates a new `Duplex`, along with a channel to communicate","jsonrpc_core_client::transports","HTTP client","Create a HTTP Client","Rpc client implementation for…","LocalRpc","Implements a rpc client for `MetaIoHandler`.","connect_with_metadata","Connects to a `Deref<Target = MetaIoHandler<Metadata>`.","Connects to a `Deref<Target = MetaIoHandler<Metadata +…","LocalMeta","Metadata for LocalRpc.","connect_with_pubsub","Connects with pubsub.","JSON-RPC websocket client implementation.","try_connect","connect","Creates JSON-RPC requests","parse_response","Parse raw string into a single JSON value, together with…","A type representing all possible values sent from the…","A regular JSON-RPC request output (single response).","A notification.","RpcError","jsonrpc_core_client","The errors returned by the client.","JsonRpcError","An error returned by the server.","Failure to parse server response.","Request timed out.","Not rpc specific errors.","A channel to a `RpcClient`.","The future returned by the rpc call.","The stream returned by a subscribe.","A typed subscription stream.","Client for raw JSON RPC requests","Client for typed JSON RPC requests","jsonrpc_core_client::transports::duplex","jsonrpc_core_client::transports::local","typedclient","Creates a new `LocalRpc` with default metadata.","with_metadata","Creates a new `LocalRpc` with given handler and metadata.","Create a new RequestBuilder","Get the id of the response (if any).","Get the method name if the output is a notification.","subscription_id","Parses the response into a subscription id.","Creates a new `RpcFuture`.","receiver","Crates a new `SubscriptionStream`.","subscriptionstream","Creates a new `TypedSubscriptionStream`.","Call RPC with raw JSON","Subscribe to topic with raw JSON","Create new TypedClient","Call RPC with serialization of request and deserialization…","Subscribe with serialization of request and…"];
searchIndex["jsonrpc_client_transports"]={"doc":"JSON-RPC client implementation.","i":[[3,R[266],R[246],R[303],N,N],[3,R[261],E,R[304],N,N],[3,R[262],E,R[305],N,N],[3,R[263],E,R[306],N,N],[3,R[264],E,R[307],N,N],[3,R[265],E,R[308],N,N],[4,R[295],E,R[297],N,N],[13,R[298],E,R[299],0,N],[13,R[267],E,R[300],0,N],[13,"Timeout",E,R[301],0,N],[13,"Other",E,R[302],0,N],[0,R[268],E,R[269],N,N],[3,R[260],R[242],R[289],N,N],[4,R[259],E,R[292],N,N],[13,"Output",E,R[293],1,N],[13,R[21],E,R[294],1,N],[5,R[290],E,R[291],N,[[["str"]],[[R[247]],[R[28],[R[247]]]]]],[0,"duplex",E,R[270],N,N],[3,"Duplex",R[250],R[271],N,N],[5,"duplex",E,R[272],N,[[["tsink"],["tstream"]]]],[0,"http",R[242],R[274],N,N],[5,R[288],"jsonrpc_client_transports::transports::http",R[275],N,[[["str"]]]],[0,"local",R[242],R[276],N,N],[3,R[277],R[252],R[278],N,N],[5,R[279],E,R[280],N,[[[R[243]],[R[244]]]]],[5,R[288],E,R[281],N,[[[R[243]]]]],[5,R[284],E,R[285],N,[[[R[243]]]]],[6,R[282],E,R[283],N,N],[11,"new",E,R[312],2,[[[R[243]]],["self"]]],[11,R[313],E,R[314],2,[[[R[243]],[R[244]]],["self"]]],[0,"ws",R[242],R[286],N,N],[5,R[287],"jsonrpc_client_transports::transports::ws",R[245],N,[[["str"]],[[R[28],["error"]],["error"]]]],[5,R[288],E,R[245],N,[[["url"]]]],[11,"new",R[242],R[315],3,[[],["self"]]],[11,"id",E,R[316],1,[[["self"]],[["id"],[R[34],["id"]]]]],[11,"method",E,R[317],1,[[["self"]],[[R[1]],[R[34],[R[1]]]]]],[11,R[318],E,R[319],1,[[["self"]],[[R[119]],[R[34],[R[119]]]]]],[11,"new",R[246],R[320],4,[[[R[321],[R[28]]],[R[28],["value",R[247]]]],["self"]]],[11,"new",E,R[322],5,[[[R[321],[R[28]]],[R[28],["value",R[247]]]],["self"]]],[11,"new",E,R[324],6,[[["str"],[R[323]]],["self"]]],[11,R[248],E,R[325],7,[[["self"],[R[37]],["str"]]]],[11,R[249],E,R[326],7,[[["self"],[R[37]],["str"]]]],[11,"new",E,R[327],8,[[[R[253]]],["self"]]],[11,R[248],E,R[328],8,[[["self"],[R[68]],["str"],["str"]]]],[11,R[249],E,R[329],8,[[["self"],["str"],["str"],[R[68]]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[40],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[[U]],[R[28]]]],[11,R[42],E,E,9,[[],[R[28]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"]],[R[47]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,R[251],E,E,4,[[],["f"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[[U]],[R[28]]]],[11,R[42],E,E,6,[[],[R[28]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[47]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[40],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[40],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[49],E,E,0,[[["self"]],[R[1]]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,"from",R[242],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[40],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,"from",R[250],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[[U]],[R[28]]]],[11,R[42],E,E,10,[[],[R[28]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"]],[R[47]]]],[11,R[251],E,E,10,[[],["f"]]],[11,"from",R[252],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,"clone",R[242],E,1,[[["self"]],[R[254]]]],[11,"clone",R[246],E,9,[[["self"]],[R[256]]]],[11,"clone",E,E,7,[[["self"]],[R[253]]]],[11,"clone",E,E,8,[[["self"]],[R[311]]]],[11,"eq",R[242],E,1,[[["self"],[R[254]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[254]]],["bool"]]],[11,"from",R[246],E,0,[[["error"]],["self"]]],[11,"from",E,E,9,[[[R[255]],["sender",[R[255]]]],["self"]]],[11,"from",E,E,7,[[[R[256]]],["self"]]],[11,"from",E,E,8,[[[R[256]]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[250],E,10,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[242],E,1,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[246],E,0,[[["self"],[R[55]]],[R[28]]]],[11,"name",E,E,0,[[["self"]],[[R[34],["str"]],["str"]]]],[11,"cause",E,E,0,[[["self"]],[["fail"],[R[34],["fail"]]]]],[11,R[257],E,E,0,[[["self"]],[[R[34],[R[257]]],[R[257]]]]],[11,"poll",R[250],E,10,[[["self"]],[["async"],[R[28],["async"]]]]],[11,"poll",R[246],E,4,[[["self"]],[["async"],[R[28],["async"]]]]],[11,"poll",R[252],E,2,[[["self"]],[["async",[R[34]]],[R[28],["async"]]]]],[11,"poll",R[246],E,5,[[["self"]],[["async",[R[34]]],[R[28],["async"]]]]],[11,"poll",E,E,6,[[["self"]],[["async",[R[34]]],[R[28],["async"]]]]],[11,R[131],R[252],E,2,[[["self"]],[[R[28],[R[258]]],[R[258]]]]],[11,R[133],E,E,2,[[["self"]],[["async"],[R[28],["async"]]]]],[11,R[68],R[242],E,1,[[["self"],["__s"]],[R[28]]]],[11,R[69],E,E,1,[[["__d"]],[R[28]]]]],"p":[[4,R[295]],[4,R[259]],[3,R[277]],[3,R[260]],[3,R[261]],[3,R[262]],[3,R[263]],[3,R[264]],[3,R[265]],[3,R[266]],[3,"Duplex"]]};
searchIndex["jsonrpc_core"]={"doc":"Transport agnostic jsonrpc library.","i":[[3,R[73],R[19],"Simplified `IoHandler` with no `Metadata` associated with…",N,N],[3,R[72],E,"Request handler",N,N],[4,R[70],E,"Possible Remote Procedures with Metadata",N,N],[13,"Method",E,"A method call",0,N],[13,R[21],E,"A notification",0,N],[13,"Alias",E,"An alias to other method,",0,N],[4,R[71],E,"`IoHandler` json-rpc protocol compatibility",N,N],[13,"V1",E,"Compatible only with JSON-RPC 1.x",1,N],[13,"V2",E,"Compatible only with JSON-RPC 2.0",1,N],[13,"Both",E,"Compatible with both",1,N],[11,R[4],E,"Creates new `MetaIoHandler` compatible with specified…",2,[[[R[0]]],["self"]]],[11,"new",E,"Creates new `MetaIoHandler`",2,[[[R[0]],["s"]],["self"]]],[11,"with_middleware",E,"Creates new `MetaIoHandler` with specified middleware.",2,[[["s"]],["self"]]],[11,R[14],E,"Adds an alias to a method.",2,[[["self"],["str"]]]],[11,R[15],E,"Adds new supported asynchronous method",2,[[["self"],["str"],["f"]]]],[11,R[17],E,"Adds new supported notification",2,[[["self"],["str"],["f"]]]],[11,R[16],E,"Adds new supported asynchronous method with metadata…",2,[[["self"],["str"],["f"]]]],[11,R[18],E,"Adds new supported notification with metadata support.",2,[[["self"],["str"],["f"]]]],[11,"extend_with",E,"Extend this `MetaIoHandler` with methods defined elsewhere.",2,[[["self"],["f"]]]],[11,R[12],E,R[13],2,[[["self"],["str"],[T]],[[R[1]],[R[34],[R[1]]]]]],[11,R[5],E,"Handle given request asynchronously.",2,[[["self"],["str"],[T]],[R[3]]]],[11,R[8],E,"Handle deserialized RPC request.",2,[[["self"],[R[9]],[T]],[R[10]]]],[11,R[11],E,"Handle single call asynchronously.",2,[[["self"],["call"],[T]],[[R[2],[R[2]]],[R[2],[R[7],R[3]]]]]],[11,"new",E,"Creates new `IoHandler` without any metadata.",3,[[],["self"]]],[11,R[4],E,"Creates new `IoHandler` without any metadata compatible…",3,[[[R[0]]],["self"]]],[11,R[5],E,"Handle given string request asynchronously.",3,[[["self"],["str"]],[[R[6]],[R[3],[R[6],R[7]]],[R[7]]]]],[11,R[8],E,"Handle deserialized RPC request asynchronously.",3,[[["self"],[R[9]]],[[R[6]],[R[7]],[R[10],[R[6],R[7]]]]]],[11,R[11],E,"Handle single Call asynchronously.",3,[[["self"],["call"]],[[R[7]],[R[2],[R[7],R[3]]],[R[2],[R[7],R[2]]]]]],[11,R[12],E,R[13],3,[[["self"],["str"]],[[R[1]],[R[34],[R[1]]]]]],[0,"delegates",E,"Delegate rpc calls",N,N],[3,R[74],R[45],"A set of RPC methods and notifications tied to single…",N,N],[11,"new",E,"Creates new `IoDelegate`",4,[[["arc"]],["self"]]],[11,R[14],E,"Adds an alias to existing method. NOTE: Aliases are not…",4,[[["self"],["str"]]]],[11,R[15],E,R[113],4,[[["self"],["str"],["f"]]]],[11,R[16],E,R[114],4,[[["self"],["str"],["f"]]]],[11,R[17],E,R[115],4,[[["self"],["str"],["f"]]]],[11,R[18],E,"Adds notification with metadata to the delegate.",4,[[["self"],["str"],["f"]]]],[0,"middleware",R[19],"`IoHandler` middlewares",N,N],[3,"Noop",R[48],"No-op middleware implementation",N,N],[6,"NoopFuture",E,"Dummy future used as a noop result of middleware.",N,N],[6,"NoopCallFuture",E,"Dummy future used as a noop call result of middleware.",N,N],[8,R[75],E,"RPC middleware",N,N],[16,"Future",E,"A returned request future.",5,N],[16,"CallFuture",E,"A returned call future.",5,N],[11,R[199],E,"Method invoked on each request. Allows you to either…",5,[[["self"],[R[9]],["m"],["f"]],[R[2]]]],[11,"on_call",E,"Method invoked on each call inside a request.",5,[[["self"],["call"],["m"],["f"]],[R[2]]]],[0,"types",R[19],"JSON-RPC types",N,N],[5,R[49],R[20],"Serialize the given data structure as a String of JSON.",N,[[[T]],[[R[1]],["error"],[R[28],[R[1],"error"]]]]],[5,"to_value",E,"Convert a `T` into `serde_json::Value` which is an enum…",N,[[[T]],[["value"],["error"],[R[28],["value","error"]]]]],[4,"Value",E,"Represents any valid JSON value.",N,N],[13,"Null",E,"Represents a JSON null value.",6,N],[13,"Bool",E,"Represents a JSON boolean.",6,N],[13,"Number",E,"Represents a JSON number, whether integer or floating point.",6,N],[13,"String",E,"Represents a JSON string.",6,N],[13,"Array",E,"Represents a JSON array.",6,N],[13,"Object",E,"Represents a JSON object.",6,N],[0,"error",E,"jsonrpc errors",N,N],[3,"Error",R[50],"Error object as defined in Spec",N,N],[12,"code",E,"Code",7,N],[12,"message",E,"Message",7,N],[12,"data",E,"Optional data",7,N],[4,R[76],E,"JSONRPC error code",N,N],[13,R[267],E,"Invalid JSON was received by the server. An error occurred…",8,N],[13,"InvalidRequest",E,"The JSON sent is not a valid Request object.",8,N],[13,"MethodNotFound",E,"The method does not exist / is not available.",8,N],[13,"InvalidParams",E,"Invalid method parameter(s).",8,N],[13,"InternalError",E,"Internal JSON-RPC error.",8,N],[13,"ServerError",E,"Reserved for implementation-defined server-errors.",8,N],[11,"code",E,"Returns integer code value",8,[[["self"]],["i64"]]],[11,"description",E,"Returns human-readable description",8,[[["self"]],[R[1]]]],[11,"new",E,"Wraps given `ErrorCode`",7,[[[R[61]]],["self"]]],[11,"parse_error",E,"Creates new `ParseError`",7,[[],["self"]]],[11,R[32],E,"Creates new `InvalidRequest`",7,[[],["self"]]],[11,"method_not_found",E,"Creates new `MethodNotFound`",7,[[],["self"]]],[11,"invalid_params",E,"Creates new `InvalidParams`",7,[[["m"]],["self"]]],[11,"invalid_params_with_details",E,"Creates `InvalidParams` for given parameter, with details.",7,[[["m"],[T]],["error"]]],[11,R[198],E,"Creates new `InternalError`",7,[[],["self"]]],[11,"invalid_version",E,"Creates new `InvalidRequest` with invalid version…",7,[[],["self"]]],[0,"id",R[20],"jsonrpc id field",N,N],[4,"Id",R[51],"Request Id",N,N],[13,"Null",E,"No id (notification)",9,N],[13,"Num",E,"Numeric id",9,N],[13,"Str",E,"String id",9,N],[0,R[37],R[20],"jsonrpc params field",N,N],[4,"Params",R[52],"Request parameters",N,N],[13,"None",E,"No parameters",10,N],[13,"Array",E,"Array of values",10,N],[13,"Map",E,"Map of values",10,N],[11,"parse",E,"Parse incoming `Params` into expected types.",10,[[],[[R[28],["error"]],["error"]]]],[11,"expect_no_params",E,"Check for no params, returns Err if any params",10,[[],[[R[28],["error"]],["error"]]]],[0,R[9],R[20],"jsonrpc request",N,N],[3,R[25],R[26],"Represents jsonrpc request which is a method call.",N,N],[12,R[27],E,R[22],11,N],[12,"method",E,R[23],11,N],[12,R[37],E,R[24],11,N],[12,"id",E,"An identifier established by the Client that MUST contain…",11,N],[3,R[21],E,"Represents jsonrpc request which is a notification.",N,N],[12,R[27],E,R[22],12,N],[12,"method",E,R[23],12,N],[12,R[37],E,R[24],12,N],[4,"Call",E,"Represents single jsonrpc call.",N,N],[13,R[25],E,R[36],13,N],[13,R[21],E,"Fire notification",13,N],[13,"Invalid",E,"Invalid call",13,N],[12,"id","jsonrpc_core::types::request::Call","Call id (if known)",13,N],[4,"Request",R[26],"Represents jsonrpc request.",N,N],[13,"Single",E,"Single request (call)",14,N],[13,"Batch",E,"Batch of requests (calls)",14,N],[0,R[62],R[20],"jsonrpc response",N,N],[3,R[30],R[53],"Successful response",N,N],[12,R[27],E,"Protocol version",15,N],[12,R[28],E,"Result",15,N],[12,"id",E,R[29],15,N],[3,R[31],E,"Unsuccessful response",N,N],[12,R[27],E,R[35],16,N],[12,"error",E,"Error",16,N],[12,"id",E,R[29],16,N],[4,"Output",E,"Represents output - failure or success",N,N],[13,R[30],E,R[30],17,N],[13,R[31],E,R[31],17,N],[4,R[77],E,"Synchronous response",N,N],[13,"Single",E,"Single response",18,N],[13,"Batch",E,"Response to batch request (batch of responses)",18,N],[11,"from",E,"Creates new output given `Result`, `Id` and `Version`.",17,[[["id"],[R[33]],["value"],[R[67],["value"]],[R[34],[R[33]]]],["self"]]],[11,R[32],E,"Creates new failure output indicating malformed request.",17,[[[R[34],[R[33]]],["id"],[R[33]]],["self"]]],[11,R[33],E,"Get the jsonrpc protocol version.",17,[[["self"]],[[R[33]],[R[34],[R[33]]]]]],[11,"id",E,"Get the correlation id.",17,[[["self"]],["id"]]],[11,"from",E,"Creates new `Response` with given error and `Version`",18,[[[R[34],[R[33]]],["error"],[R[33]]],["self"]]],[11,"from_json",E,"Deserialize `Response` from given JSON string.",18,[[["str"]],[["error"],[R[28],["error"]]]]],[0,R[33],R[20],"jsonrpc version field",N,N],[4,"Version",R[54],R[35],N,N],[13,"V2",E,"JSONRPC 2.0",19,N],[6,"BoxFuture",R[19],"A `Future` trait object.",N,N],[6,"Result",E,"A Result type.",N,N],[6,"FutureOutput",E,"A type representing middleware or RPC call output.",N,N],[6,"FutureResponse",E,"A type representing middleware or RPC response before…",N,N],[6,"FutureResult",E,"A type representing future string response.",N,N],[6,"FutureRpcResult",E,"A type representing an optional `Response` for RPC…",N,N],[8,"Metadata",E,"Metadata trait",N,N],[8,R[78],E,"Asynchronous Method with Metadata",N,N],[10,"call",E,R[36],20,[[["self"],[R[37]],[T]],[["value"],["boxfuture",["value"]]]]],[8,R[79],E,"Asynchronous Method",N,N],[16,"Out",E,"Output future",21,N],[10,"call",E,R[36],21,[[["self"],[R[37]]]]],[8,R[80],E,"Notification with Metadata",N,N],[10,"execute",E,R[38],22,[[["self"],[R[37]],[T]]]],[8,R[81],E,R[21],N,N],[10,"execute",E,R[38],23,[[["self"],[R[37]]]]],[8,R[82],E,"A type that can augment `MetaIoHandler`.",N,N],[10,R[57],E,"Extend given `handler` with additional methods.",24,[[[R[56]]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[40],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[40],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[40],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[40],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,R[58],R[45],E,4,[[],["i"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,R[39],R[48],E,25,[[["self"]],[T]]],[11,R[40],E,E,25,[[["self"],[T]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[41],E,E,25,[[[U]],[R[28]]]],[11,R[42],E,E,25,[[],[R[28]]]],[11,R[46],E,E,25,[[["self"]],[T]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"]],[R[47]]]],[11,R[39],R[20],E,6,[[["self"]],[T]]],[11,R[40],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[49],E,E,6,[[["self"]],[R[1]]]],[11,R[41],E,E,6,[[[U]],[R[28]]]],[11,R[42],E,E,6,[[],[R[28]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[47]]]],[11,R[39],R[50],E,7,[[["self"]],[T]]],[11,R[40],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[49],E,E,7,[[["self"]],[R[1]]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[40],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,R[39],R[51],E,9,[[["self"]],[T]]],[11,R[40],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[[U]],[R[28]]]],[11,R[42],E,E,9,[[],[R[28]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"]],[R[47]]]],[11,R[39],R[52],E,10,[[["self"]],[T]]],[11,R[40],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[[U]],[R[28]]]],[11,R[42],E,E,10,[[],[R[28]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"]],[R[47]]]],[11,R[39],R[26],E,11,[[["self"]],[T]]],[11,R[40],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[[U]],[R[28]]]],[11,R[42],E,E,11,[[],[R[28]]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"]],[R[47]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[40],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[[U]],[R[28]]]],[11,R[42],E,E,12,[[],[R[28]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"]],[R[47]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[40],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[[U]],[R[28]]]],[11,R[42],E,E,13,[[],[R[28]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"]],[R[47]]]],[11,R[39],E,E,14,[[["self"]],[T]]],[11,R[40],E,E,14,[[["self"],[T]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[41],E,E,14,[[[U]],[R[28]]]],[11,R[42],E,E,14,[[],[R[28]]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"]],[R[47]]]],[11,R[39],R[53],E,15,[[["self"]],[T]]],[11,R[40],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[[U]],[R[28]]]],[11,R[42],E,E,15,[[],[R[28]]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"]],[R[47]]]],[11,R[39],E,E,16,[[["self"]],[T]]],[11,R[40],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[[U]],[R[28]]]],[11,R[42],E,E,16,[[],[R[28]]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"]],[R[47]]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[40],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[[U]],[R[28]]]],[11,R[42],E,E,17,[[],[R[28]]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[44],E,E,17,[[["self"]],[R[47]]]],[11,R[39],E,E,18,[[["self"]],[T]]],[11,R[40],E,E,18,[[["self"],[T]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[[U]],[R[28]]]],[11,R[42],E,E,18,[[],[R[28]]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"]],[R[47]]]],[11,R[39],R[54],E,19,[[["self"]],[T]]],[11,R[40],E,E,19,[[["self"],[T]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[41],E,E,19,[[[U]],[R[28]]]],[11,R[42],E,E,19,[[],[R[28]]]],[11,R[46],E,E,19,[[["self"]],[T]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"]],[R[47]]]],[11,R[59],R[20],E,6,[[],["value"]]],[11,"from_iter",E,"Convert an iteratable type to a `Value`",6,[[["i"]],["value"]]],[11,"clone",E,E,6,[[["self"]],["value"]]],[11,"index",E,"Index into a `serde_json::Value` using the syntax…",6,[[["self"],["i"]],["value"]]],[11,"deserialize_any",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_i8",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_i16",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_i32",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_i64",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_u8",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_u16",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_u32",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_u64",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_f32",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_f64",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_i128",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_u128",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_option",E,E,6,[[["v"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_enum",E,E,6,[[["v"],["str"]],[[R[28],["error"]],["error"]]]],[11,"deserialize_newtype_struct",E,E,6,[[["v"],["str"]],[R[28]]]],[11,"deserialize_bool",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_char",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_str",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_string",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_bytes",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_byte_buf",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_unit",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_unit_struct",E,E,6,[[["v"],["str"]],[R[28]]]],[11,"deserialize_seq",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_tuple",E,E,6,[[["usize"],["v"]],[R[28]]]],[11,"deserialize_tuple_struct",E,E,6,[[["v"],["usize"],["str"]],[R[28]]]],[11,"deserialize_map",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_struct",E,E,6,[[["v"],["str"]],[R[28]]]],[11,"deserialize_identifier",E,E,6,[[["v"]],[R[28]]]],[11,"deserialize_ignored_any",E,E,6,[[["v"]],[R[28]]]],[11,"eq",E,E,6,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["value"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["f32"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["i8"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["i64"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["u16"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["isize"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["bool"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["f64"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["i16"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["u32"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["u8"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["u64"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["usize"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["i32"]],["bool"]]],[11,"fmt",E,"Display a JSON value as a string.",6,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,R[68],E,E,6,[[["self"],["s"]],[R[28]]]],[11,R[69],E,E,6,[[["d"]],[[R[28],["value"]],["value"]]]],[11,"index_mut",E,"Write into a `serde_json::Value` using the syntax…",6,[[["self"],["i"]],["value"]]],[11,"fmt",E,E,6,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"from",E,E,6,[[["u64"]],["value"]]],[11,"from",E,E,6,[[["i64"]],["value"]]],[11,"from",E,E,6,[[["i8"]],["value"]]],[11,"from",E,E,6,[[["i32"]],["value"]]],[11,"from",E,"Convert 32-bit floating point number to `Value`",6,[[["f32"]],["value"]]],[11,"from",E,"Convert copy-on-write string to `Value`",6,[[["str"],["cow",["str"]]],["value"]]],[11,"from",E,E,6,[[["i16"]],["value"]]],[11,"from",E,"Convert 64-bit floating point number to `Value`",6,[[["f64"]],["value"]]],[11,"from",E,E,6,[[["u8"]],["value"]]],[11,"from",E,E,6,[[["u32"]],["value"]]],[11,"from",E,"Convert boolean to `Value`",6,[[["bool"]],["value"]]],[11,"from",E,"Convert a `Vec` to `Value`",6,[[["vec"]],["value"]]],[11,"from",E,"Convert a slice to `Value`",6,[[],["value"]]],[11,"from",E,E,6,[[["usize"]],["value"]]],[11,"from",E,"Convert map (with string keys) to `Value`",6,[[["map",[R[1],"value"]],["value"],[R[1]]],["value"]]],[11,"from",E,E,6,[[["u16"]],["value"]]],[11,"from",E,"Convert string slice to `Value`",6,[[["str"]],["value"]]],[11,"from",E,"Convert `String` to `Value`",6,[[[R[1]]],["value"]]],[11,"from",E,E,6,[[["isize"]],["value"]]],[11,R[95],E,E,6,[[["str"]],[["value"],["error"],[R[28],["value","error"]]]]],[11,R[57],R[19],E,2,[[[R[56]]]]],[11,R[57],E,E,3,[[[R[56]]]]],[11,R[57],R[45],E,4,[[[R[56]]]]],[11,R[58],E,E,4,[[]]],[11,R[59],R[19],E,1,[[],["self"]]],[11,R[59],E,E,2,[[],["self"]]],[11,R[59],E,E,3,[[],[R[60]]]],[11,R[59],R[48],E,25,[[],["noop"]]],[11,"clone",R[19],E,0,[[["self"]],["remoteprocedure"]]],[11,"clone",E,E,1,[[["self"]],[R[0]]]],[11,"clone",E,E,2,[[["self"]],[R[56]]]],[11,"clone",E,E,3,[[["self"]],[R[60]]]],[11,"clone",R[48],E,25,[[["self"]],["noop"]]],[11,"clone",R[50],E,8,[[["self"]],[R[61]]]],[11,"clone",E,E,7,[[["self"]],["error"]]],[11,"clone",R[51],E,9,[[["self"]],["id"]]],[11,"clone",R[52],E,10,[[["self"]],[R[37]]]],[11,"clone",R[26],E,11,[[["self"]],[R[63]]]],[11,"clone",E,E,12,[[["self"]],[R[64]]]],[11,"clone",E,E,13,[[["self"]],["call"]]],[11,"clone",E,E,14,[[["self"]],[R[9]]]],[11,"clone",R[53],E,15,[[["self"]],[R[65]]]],[11,"clone",E,E,16,[[["self"]],[R[66]]]],[11,"clone",E,E,17,[[["self"]],["output"]]],[11,"clone",E,E,18,[[["self"]],[R[62]]]],[11,"clone",R[54],E,19,[[["self"]],[R[33]]]],[11,"eq",R[50],E,8,[[["self"],[R[61]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[61]]],["bool"]]],[11,"eq",E,E,7,[[["self"],["error"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["error"]],["bool"]]],[11,"eq",R[51],E,9,[[["self"],["id"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["id"]],["bool"]]],[11,"eq",R[52],E,10,[[["self"],[R[37]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[37]]],["bool"]]],[11,"eq",R[26],E,11,[[["self"],[R[63]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[63]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[64]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[64]]],["bool"]]],[11,"eq",E,E,13,[[["self"],["call"]],["bool"]]],[11,"ne",E,E,13,[[["self"],["call"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[9]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[9]]],["bool"]]],[11,"eq",R[53],E,15,[[["self"],[R[65]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[65]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[66]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[66]]],["bool"]]],[11,"eq",E,E,17,[[["self"],["output"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["output"]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[62]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[62]]],["bool"]]],[11,"eq",R[54],E,19,[[["self"],[R[33]]],["bool"]]],[11,"from",R[19],E,2,[[[R[60]]],["self"]]],[11,"from",R[50],E,8,[[["i64"]],["self"]]],[11,"from",R[20],E,6,[[[R[37]]],["value"]]],[11,"from",R[26],E,13,[[[R[63]]],["self"]]],[11,"from",E,E,13,[[[R[64]]],["self"]]],[11,"from",R[19],"Convert into a result. Will be `Ok` if it is a `Success`…",26,[[["output"]],[["value"],[R[67],["value"]]]]],[11,"from",R[53],E,18,[[[R[66]]],["self"]]],[11,"from",E,E,18,[[[R[65]]],["self"]]],[11,"deref",R[19],E,3,[[["self"]]]],[11,R[94],E,E,3,[[["self"]]]],[11,"hash",R[51],E,9,[[["self"],["__h"]]]],[11,"hash",R[54],E,19,[[["self"],["__h"]]]],[11,"fmt",R[50],E,7,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[19],E,0,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,2,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,3,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[48],E,25,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[50],E,8,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,7,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[51],E,9,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[52],E,10,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[26],E,11,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,12,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,13,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,14,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[53],E,15,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,16,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,17,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,18,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[54],E,19,[[["self"],[R[55]]],[R[28]]]],[11,R[68],R[50],E,8,[[["self"],["s"]],[R[28]]]],[11,R[68],E,E,7,[[["self"],["__s"]],[R[28]]]],[11,R[68],R[51],E,9,[[["self"],["__s"]],[R[28]]]],[11,R[68],R[52],E,10,[[["self"],["__s"]],[R[28]]]],[11,R[68],R[26],E,11,[[["self"],["__s"]],[R[28]]]],[11,R[68],E,E,12,[[["self"],["__s"]],[R[28]]]],[11,R[68],E,E,13,[[["self"],["__s"]],[R[28]]]],[11,R[68],E,E,14,[[["self"],["__s"]],[R[28]]]],[11,R[68],R[53],E,15,[[["self"],["__s"]],[R[28]]]],[11,R[68],E,E,16,[[["self"],["__s"]],[R[28]]]],[11,R[68],E,E,17,[[["self"],["__s"]],[R[28]]]],[11,R[68],E,E,18,[[["self"],["__s"]],[R[28]]]],[11,R[68],R[54],E,19,[[["self"],["s"]],[R[28]]]],[11,R[69],R[50],E,8,[[["d"]],[[R[61]],[R[28],[R[61]]]]]],[11,R[69],E,E,7,[[["__d"]],[R[28]]]],[11,R[69],R[51],E,9,[[["__d"]],[R[28]]]],[11,R[69],R[52],E,10,[[["__d"]],[R[28]]]],[11,R[69],R[26],E,11,[[["__d"]],[R[28]]]],[11,R[69],E,E,12,[[["__d"]],[R[28]]]],[11,R[69],E,E,13,[[["__d"]],[R[28]]]],[11,R[69],E,E,14,[[["__d"]],[R[28]]]],[11,R[69],R[53],E,15,[[["__d"]],[R[28]]]],[11,R[69],E,E,16,[[["__d"]],[R[28]]]],[11,R[69],E,E,17,[[["__d"]],[R[28]]]],[11,R[69],E,E,18,[[["__d"]],[R[28]]]],[11,R[69],R[54],E,19,[[["d"]],[[R[28],[R[33]]],[R[33]]]]],[11,"get",R[20],"Index into a JSON array or map. A string index can be used…",6,[[["self"],["i"]],[[R[34],["value"]],["value"]]]],[11,"get_mut",E,"Mutably index into a JSON array or map. A string index can…",6,[[["self"],["i"]],[["value"],[R[34],["value"]]]]],[11,"is_object",E,"Returns true if the `Value` is an Object. Returns false…",6,[[["self"]],["bool"]]],[11,"as_object",E,"If the `Value` is an Object, returns the associated Map.…",6,[[["self"]],[["map"],[R[34],["map"]]]]],[11,"as_object_mut",E,"If the `Value` is an Object, returns the associated…",6,[[["self"]],[[R[34],["map"]],["map"]]]],[11,"is_array",E,"Returns true if the `Value` is an Array. Returns false…",6,[[["self"]],["bool"]]],[11,"as_array",E,"If the `Value` is an Array, returns the associated vector.…",6,[[["self"]],[[R[34],["vec"]],["vec"]]]],[11,"as_array_mut",E,"If the `Value` is an Array, returns the associated mutable…",6,[[["self"]],[[R[34],["vec"]],["vec"]]]],[11,"is_string",E,"Returns true if the `Value` is a String. Returns false…",6,[[["self"]],["bool"]]],[11,"as_str",E,"If the `Value` is a String, returns the associated str.…",6,[[["self"]],[["str"],[R[34],["str"]]]]],[11,"is_number",E,"Returns true if the `Value` is a Number. Returns false…",6,[[["self"]],["bool"]]],[11,"is_i64",E,"Returns true if the `Value` is an integer between…",6,[[["self"]],["bool"]]],[11,"is_u64",E,"Returns true if the `Value` is an integer between zero and…",6,[[["self"]],["bool"]]],[11,"is_f64",E,"Returns true if the `Value` is a number that can be…",6,[[["self"]],["bool"]]],[11,"as_i64",E,"If the `Value` is an integer, represent it as i64 if…",6,[[["self"]],[[R[34],["i64"]],["i64"]]]],[11,"as_u64",E,"If the `Value` is an integer, represent it as u64 if…",6,[[["self"]],[[R[34],["u64"]],["u64"]]]],[11,"as_f64",E,"If the `Value` is a number, represent it as f64 if…",6,[[["self"]],[["f64"],[R[34],["f64"]]]]],[11,"is_boolean",E,"Returns true if the `Value` is a Boolean. Returns false…",6,[[["self"]],["bool"]]],[11,"as_bool",E,"If the `Value` is a Boolean, returns the associated bool.…",6,[[["self"]],[[R[34],["bool"]],["bool"]]]],[11,"is_null",E,"Returns true if the `Value` is a Null. Returns false…",6,[[["self"]],["bool"]]],[11,"as_null",E,"If the `Value` is a Null, returns (). Returns None…",6,[[["self"]],[R[34]]]],[11,"pointer",E,"Looks up a value by a JSON Pointer.",6,[[["self"],["str"]],[["value"],[R[34],["value"]]]]],[11,"pointer_mut",E,"Looks up a value by a JSON Pointer and returns a mutable…",6,[[["self"],["str"]],[["value"],[R[34],["value"]]]]],[11,"take",E,"Takes the value out of the `Value`, leaving a `Null` in…",6,[[["self"]],["value"]]]],"p":[[4,R[70]],[4,R[71]],[3,R[72]],[3,R[73]],[3,R[74]],[8,R[75]],[4,"Value"],[3,"Error"],[4,R[76]],[4,"Id"],[4,"Params"],[3,R[25]],[3,R[21]],[4,"Call"],[4,"Request"],[3,R[30]],[3,R[31]],[4,"Output"],[4,R[77]],[4,"Version"],[8,R[78]],[8,R[79]],[8,R[80]],[8,R[81]],[8,R[82]],[3,"Noop"],[6,"Result"]]};
searchIndex["jsonrpc_core_client"]={"doc":"JSON-RPC client implementation primitives.","i":[[0,R[268],R[296],R[269],N,N],[0,"duplex",R[273],R[270],N,N],[3,"Duplex",R[309],R[271],N,N],[5,"duplex",E,R[272],N,[[["tsink"],["tstream"]]]],[0,"http",R[273],R[274],N,N],[5,R[288],"jsonrpc_core_client::transports::http",R[275],N,[[["str"]]]],[0,"local",R[273],R[276],N,N],[3,R[277],R[310],R[278],N,N],[5,R[279],E,R[280],N,[[[R[243]],[R[244]]]]],[5,R[288],E,R[281],N,[[[R[243]]]]],[6,R[282],E,R[283],N,N],[5,R[284],E,R[285],N,[[[R[243]]]]],[0,"ws",R[273],R[286],N,N],[5,R[287],"jsonrpc_core_client::transports::ws",R[245],N,[[["str"]],[["error"],[R[28],["error"]]]]],[5,R[288],E,R[245],N,[[["url"]]]],[3,R[260],R[273],R[289],N,N],[5,R[290],E,R[291],N,[[["str"]],[[R[247]],[R[28],[R[247]]]]]],[4,R[259],E,R[292],N,N],[13,"Output",E,R[293],0,N],[13,R[21],E,R[294],0,N],[4,R[295],R[296],R[297],N,N],[13,R[298],E,R[299],1,N],[13,R[267],E,R[300],1,N],[13,"Timeout",E,R[301],1,N],[13,"Other",E,R[302],1,N],[3,R[266],E,R[303],N,N],[3,R[261],E,R[304],N,N],[3,R[262],E,R[305],N,N],[3,R[263],E,R[306],N,N],[3,R[264],E,R[307],N,N],[3,R[265],E,R[308],N,N],[11,"from",R[309],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,R[251],E,E,2,[[],["f"]]],[11,"from",R[310],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,"from",R[273],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[40],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,"from",R[296],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[49],E,E,1,[[["self"]],[R[1]]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,"as_fail",E,E,1,[[["self"]],["fail"]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[40],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[[U]],[R[28]]]],[11,R[42],E,E,6,[[],[R[28]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[47]]]],[11,R[251],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,R[39],E,E,9,[[["self"]],[T]]],[11,R[40],E,E,9,[[["self"],[T]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[[U]],[R[28]]]],[11,R[42],E,E,9,[[],[R[28]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"]],[R[47]]]],[11,R[39],E,E,10,[[["self"]],[T]]],[11,R[40],E,E,10,[[["self"],[T]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[[U]],[R[28]]]],[11,R[42],E,E,10,[[],[R[28]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"]],[R[47]]]],[11,"poll",R[309],E,2,[[["self"]],[["async"],[R[28],["async"]]]]],[11,"poll",R[296],E,6,[[["self"]],[["async"],[R[28],["async"]]]]],[11,R[69],R[273],E,0,[[["__d"]],[[R[254]],[R[28],[R[254]]]]]],[11,"name",R[296],E,1,[[["self"]],[["str"],[R[34],["str"]]]]],[11,"cause",E,E,1,[[["self"]],[["fail"],[R[34],["fail"]]]]],[11,R[257],E,E,1,[[["self"]],[[R[34],[R[257]]],[R[257]]]]],[11,"from",E,E,9,[[[R[256]]],[R[253]]]],[11,"from",E,E,5,[[[R[255]],["sender",[R[255]]]],[R[256]]]],[11,"from",E,E,10,[[[R[256]]],[R[311]]]],[11,"from",E,E,1,[[["error"]],[R[247]]]],[11,R[131],R[310],E,3,[[["self"]],[[R[28],[R[258]]],[R[258]]]]],[11,R[133],E,E,3,[[["self"]],[[R[28],["async"]],["async"]]]],[11,"fmt",R[296],E,1,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"eq",R[273],E,0,[[["self"],[R[254]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[254]]],["bool"]]],[11,"poll",R[310],E,3,[[["self"]],[["async",[R[34]]],[R[28],["async"]]]]],[11,"poll",R[296],E,8,[[["self"]],[["async",[R[34]]],[R[28],["async"]]]]],[11,"poll",E,E,7,[[["self"]],[[R[28],["async"]],["async",[R[34]]]]]],[11,"fmt",R[309],E,2,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",R[296],E,1,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",R[273],E,0,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"clone",R[296],E,5,[[["self"]],[R[256]]]],[11,"clone",E,E,10,[[["self"]],[R[311]]]],[11,"clone",R[273],E,0,[[["self"]],[R[254]]]],[11,"clone",R[296],E,9,[[["self"]],[R[253]]]],[11,R[68],R[273],E,0,[[["self"],["__s"]],[R[28]]]],[11,"new",R[310],R[312],3,[[[R[243]]],["localrpc"]]],[11,R[313],E,R[314],3,[[[R[243]],[R[244]]],["localrpc"]]],[11,"new",R[273],R[315],4,[[],["requestbuilder"]]],[11,"id",E,R[316],0,[[["self"]],[[R[34],["id"]],["id"]]]],[11,"method",E,R[317],0,[[["self"]],[[R[34],[R[1]]],[R[1]]]]],[11,R[318],E,R[319],0,[[["self"]],[[R[34],[R[119]]],[R[119]]]]],[11,"new",R[296],R[320],6,[[[R[28],["value",R[247]]],[R[321],[R[28]]]],["rpcfuture"]]],[11,"new",E,R[322],7,[[[R[321],[R[28]]],[R[28],["value",R[247]]]],[R[323]]]],[11,"new",E,R[324],8,[[[R[323]],["str"]],["typedsubscriptionstream"]]],[11,R[248],E,R[325],9,[[["self"],[R[37]],["str"]]]],[11,R[249],E,R[326],9,[[["self"],[R[37]],["str"]]]],[11,"new",E,R[327],10,[[[R[253]]],[R[311]]]],[11,R[248],E,R[328],10,[[["self"],[T],["str"],["str"]]]],[11,R[249],E,R[329],10,[[["self"],["str"],["str"],[T]]]]],"p":[[4,R[259]],[4,R[295]],[3,"Duplex"],[3,R[277]],[3,R[260]],[3,R[266]],[3,R[261]],[3,R[262]],[3,R[263]],[3,R[264]],[3,R[265]]]};
searchIndex["jsonrpc_derive"]={"doc":"High level, typed wrapper for `jsonrpc_core`.","i":[[23,"rpc","jsonrpc_derive","Apply `#[rpc]` to a trait, and a `to_delegate` method is…",N,N]],"p":[]};
searchIndex["jsonrpc_http_server"]={"doc":"jsonrpc http server.","i":[[0,"cors",R[186],R[207],N,N],[4,R[102],R[202],R[209],N,N],[13,"Http",E,R[210],0,N],[13,"Https",E,R[211],0,N],[13,"Custom",E,R[212],0,N],[3,"Origin",E,R[151],N,N],[4,R[103],E,R[187],N,N],[13,"Value",E,R[188],1,N],[13,"Null",E,R[189],1,N],[13,"Any",E,R[190],1,N],[4,R[104],E,R[213],N,N],[13,"Only",E,R[214],2,N],[13,"Any",E,R[215],2,N],[4,R[105],E,R[191],N,N],[13,R[192],E,R[193],3,N],[13,"Invalid",E,R[194],3,N],[13,"Ok",E,R[195],3,N],[5,R[216],E,R[217],N,[[[R[34]],["str"],[R[34],["str"]]],[[R[84],[R[83]]],[R[83]]]]],[5,R[218],E,R[219],N,[[[R[99]],["f"],["impl iterator<item = t>"]],[[R[84],["vec"]],["vec"]]]],[3,"Ascii",E,R[208],N,N],[4,R[103],R[186],R[187],N,N],[13,"Value",E,R[188],1,N],[13,"Null",E,R[189],1,N],[13,"Any",E,R[190],1,N],[4,R[105],E,R[191],N,N],[13,R[192],E,R[193],3,N],[13,"Invalid",E,R[194],3,N],[13,"Ok",E,R[195],3,N],[3,"Origin",E,R[151],N,N],[4,R[106],E,R[152],N,N],[13,R[153],E,R[154],4,N],[13,R[221],E,R[155],4,N],[3,"Host",E,R[156],N,N],[3,R[110],E,R[206],N,N],[3,R[205],E,"jsonrpc http request handler.",N,N],[3,R[77],E,"Simple server response structure",N,N],[12,"code",E,"Response code",5,N],[12,"content_type",E,"Response content type",5,N],[12,"content",E,"Response body",5,N],[3,"Rpc",E,"RPC Handler bundled with metadata extractor.",N,N],[12,"handler",E,"RPC Handler",6,N],[12,"extractor",E,"Metadata extractor",6,N],[3,R[139],E,"Convenient JSON-RPC HTTP Server builder.",N,N],[3,R[182],E,"Handle used to close the server. Can be cloned and passed…",N,N],[3,"Server",E,"jsonrpc http server instance",N,N],[4,R[204],E,"Action undertaken by a middleware.",N,N],[13,"Proceed",E,"Proceed with standard RPC handling",7,N],[12,"should_continue_on_invalid_cors",R[196],"Should the request be processed even if invalid CORS…",7,N],[12,R[9],E,"The request object returned",7,N],[13,"Respond",R[186],"Intercept the request and respond differently.",7,N],[12,"should_validate_hosts",R[196],"Should standard hosts validation be performed?",7,N],[12,R[62],E,"a future for server response",7,N],[4,"RestApi",R[186],"REST -> RPC converter state.",N,N],[13,"Secure",E,"The REST -> RPC converter is enabled and requires…",8,N],[13,"Unsecure",E,"The REST -> RPC converter is enabled and does not require…",8,N],[13,R[221],E,"The REST -> RPC converter is disabled.",8,N],[5,R[201],E,"Returns the CORS AllowHeaders header that should be…",N,[[[R[9]],[R[99]]],[["vec",[R[197]]],[R[84],["vec"]]]]],[5,"cors_allow_origin",E,"Returns a CORS AllowOrigin header that should be returned…",N,[[[R[9]],[R[34]]],[[R[197]],[R[84],[R[197]]]]]],[5,"is_host_allowed",E,"Returns `true` if Host header in request matches a list of…",N,[[[R[9]],[R[34]]],["bool"]]],[11,"new",E,"Create new request handler.",9,[[[R[34],["vec"]],[R[34],["vec"]],["u32"],["arc",[R[173]]],["restapi"],[R[34],["u32"]],[R[34]],["vec",["host"]],["rpc"],["bool"],["usize"],["vec",[R[83]]],[R[99]],[R[173]]],["self"]]],[11,"empty",E,"Create a response with empty body and 200 OK status code.",5,[[],["self"]]],[11,"ok",E,"Create a response with given body and 200 OK status code.",5,[[[R[1]],["into",[R[1]]]],["self"]]],[11,R[198],E,"Create a response for plaintext internal error.",5,[[[R[1]],["into",[R[1]]]],["self"]]],[11,"service_unavailable",E,"Create a json response for service unavailable.",5,[[[R[1]],["into",[R[1]]]],["self"]]],[11,"host_not_allowed",E,"Create a response for not allowed hosts.",5,[[],["self"]]],[11,"unsupported_content_type",E,"Create a response for unsupported content type.",5,[[],["self"]]],[11,"method_not_allowed",E,"Create a response for disallowed method used.",5,[[],["self"]]],[11,"invalid_allow_origin",E,"CORS invalid",5,[[],["self"]]],[11,"invalid_allow_headers",E,"CORS header invalid",5,[[],["self"]]],[11,"bad_request",E,"Create a response for bad request",5,[[[R[1]],["into",[R[1]]]],["self"]]],[11,"too_large",E,"Create a response for too large (413)",5,[[[R[1]],["into",[R[1]]]],["self"]]],[8,R[184],E,"Allows to intercept request and handle it differently.",N,N],[10,R[199],E,"Takes a request and decides how to proceed with it.",10,[[["self"],[R[9],["body"]],["body"]],["requestmiddlewareaction"]]],[8,R[150],E,"Extracts metadata from the HTTP request.",N,N],[10,"read_metadata",E,"Read the metadata from the request",11,[[["self"],[R[9]]],["m"]]],[11,"new",E,R[200],12,[[[T]],["self"]]],[11,R[168],E,R[200],12,[[[T],["e"]],["self"]]],[11,R[170],E,R[227],12,[[[R[88]]],["self"]]],[11,"rest_api",E,"Enable the REST -> RPC converter.",12,[[["restapi"]],["self"]]],[11,"health_api",E,"Enable health endpoint.",12,[[[T]],["self"]]],[11,"keep_alive",E,"Enables or disables HTTP keep-alive.",12,[[["bool"]],["self"]]],[11,"threads",E,"Sets number of threads of the server to run.",12,[[["usize"]],["self"]]],[11,"cors",E,"Configures a list of allowed CORS origins.",12,[[[R[83]],[R[100],[R[83]]]],["self"]]],[11,"cors_max_age",E,"Configure CORS `AccessControlMaxAge` header returned.",12,[[[R[34],["u32"]],["into",[R[34]]]],["self"]]],[11,R[201],E,"Configure the CORS `AccessControlAllowHeaders` header…",12,[[[R[99]]],["self"]]],[11,R[229],E,"Configures request middleware",12,[[[R[173]]],["self"]]],[11,"meta_extractor",E,"Configures metadata extractor",12,[[[R[167]]],["self"]]],[11,"allow_only_bind_host",E,"Allow connections only with `Host` header set to binding…",12,[[],["self"]]],[11,R[228],E,"Specify a list of valid `Host` headers. Binding address is…",12,[[["host"],[R[100],["host"]]],["self"]]],[11,"max_request_body_size",E,"Sets the maximum size of a request body in bytes (default…",12,[[["usize"]],["self"]]],[11,"start_http",E,"Start this JSON-RPC HTTP server trying to bind to…",12,[[[R[143]]],[["server"],[R[28],["server"]]]]],[11,"close",E,"Shutdown a running server",13,[[]]],[11,"address",E,"Returns address of this server",14,[[["self"]],[R[143]]]],[11,"close",E,"Closes the server.",14,[[]]],[11,"wait",E,"Will block, waiting for the server to finish.",14,[[]]],[11,R[226],E,"Get a handle that allows us to close the server from a…",14,[[["self"]],[R[176]]]],[11,R[39],R[202],E,0,[[["self"]],[T]]],[11,R[40],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,R[203],E,E,0,[[["self"],["k"]],["bool"]]],[11,R[39],R[186],E,15,[[["self"]],[T]]],[11,R[40],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[[U]],[R[28]]]],[11,R[42],E,E,15,[[],[R[28]]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"]],[R[47]]]],[11,R[203],E,E,15,[[["self"],["k"]],["bool"]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[40],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[49],E,E,1,[[["self"]],[R[1]]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,R[203],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[39],R[202],E,2,[[["self"]],[T]]],[11,R[40],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,R[39],R[186],E,3,[[["self"]],[T]]],[11,R[40],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,R[203],E,E,3,[[["self"],["k"]],["bool"]]],[11,R[39],R[202],E,16,[[["self"]],[T]]],[11,R[40],E,E,16,[[["self"],[T]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[49],E,E,16,[[["self"]],[R[1]]]],[11,R[41],E,E,16,[[[U]],[R[28]]]],[11,R[42],E,E,16,[[],[R[28]]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"]],[R[47]]]],[11,R[203],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[39],R[186],E,4,[[["self"]],[T]]],[11,R[40],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,R[203],E,E,4,[[["self"],["k"]],["bool"]]],[11,R[39],E,E,17,[[["self"]],[T]]],[11,R[40],E,E,17,[[["self"],[T]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[[U]],[R[28]]]],[11,R[42],E,E,17,[[],[R[28]]]],[11,R[46],E,E,17,[[["self"]],[T]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[44],E,E,17,[[["self"]],[R[47]]]],[11,R[203],E,E,17,[[["self"],["k"]],["bool"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[[U]],[R[28]]]],[11,R[42],E,E,18,[[],[R[28]]]],[11,R[46],E,E,18,[[["self"]],[T]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"]],[R[47]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[[U]],[R[28]]]],[11,R[42],E,E,9,[[],[R[28]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"]],[R[47]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[40],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[[U]],[R[28]]]],[11,R[42],E,E,6,[[],[R[28]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[47]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[[U]],[R[28]]]],[11,R[42],E,E,12,[[],[R[28]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"]],[R[47]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[40],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[[U]],[R[28]]]],[11,R[42],E,E,13,[[],[R[28]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"]],[R[47]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[41],E,E,14,[[[U]],[R[28]]]],[11,R[42],E,E,14,[[],[R[28]]]],[11,R[46],E,E,14,[[["self"]],[T]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"]],[R[47]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[40],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,"poll",E,E,18,[[["self"]],[["async",[R[34]]],[R[28],["async"]]]]],[11,"hash",R[202],E,0,[[["self"],["__h"]]]],[11,"hash",R[186],E,17,[[["self"],["__h"]]]],[11,"hash",E,E,15,[[["self"],["__h"]]]],[11,"fmt",R[202],E,0,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",R[186],E,3,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",E,E,4,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",E,E,17,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",R[202],E,2,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",R[186],E,15,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"into",E,E,3,[[],[R[34]]]],[11,"into",E,E,4,[[],[[R[34],["vec"]],["vec"]]]],[11,"clone",E,E,3,[[["self"]],[R[84]]]],[11,"clone",E,E,1,[[["self"]],[R[83]]]],[11,"clone",E,E,15,[[["self"]],["origin"]]],[11,"clone",E,E,17,[[["self"]],["host"]]],[11,"clone",E,E,4,[[["self"]],[R[100]]]],[11,"clone",R[202],E,0,[[["self"]],[R[98]]]],[11,"clone",E,E,2,[[["self"]],[R[99]]]],[11,R[97],R[186],E,17,[[["self"],[T]],["bool"]]],[11,R[97],E,E,15,[[["self"],[T]],["bool"]]],[11,"from",E,E,15,[[[T]],["origin"]]],[11,"from",E,E,1,[[[T]],[R[83]]]],[11,"from",E,E,4,[[[R[34],["vec"]],["vec"]],[R[100]]]],[11,"from",E,E,17,[[[T]],["host"]]],[11,"eq",E,E,3,[[["self"],[R[84]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[84]]],["bool"]]],[11,"eq",E,E,17,[[["self"],["host"]],["bool"]]],[11,"ne",E,E,17,[[["self"],["host"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[100]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[100]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[83]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[83]]],["bool"]]],[11,"eq",E,E,15,[[["self"],["origin"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["origin"]],["bool"]]],[11,"eq",R[202],E,2,[[["self"],[R[99]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[99]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[98]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[98]]],["bool"]]],[11,"fmt",R[186],E,1,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"deref",E,E,15,[[["self"]]]],[11,"deref",E,E,17,[[["self"]]]],[11,R[59],R[202],E,16,[[],["ascii"]]],[11,"hash",E,E,16,[[["self"],["h"]]]],[11,"cmp",E,E,16,[[["self"],["ascii"]],[R[96]]]],[11,"fmt",E,E,16,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"as_ref",E,E,16,[[["self"]],["str"]]],[11,"clone",E,E,16,[[["self"]],["ascii"]]],[11,"eq",E,E,16,[[["self"],["s2"]],["bool"]]],[11,"fmt",E,E,16,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,R[94],E,E,16,[[["self"]],["s"]]],[11,"deref",E,E,16,[[["self"]],["s"]]],[11,R[95],E,E,16,[[["str"]],[["ascii"],[R[28],["ascii"]]]]],[11,R[223],E,E,16,[[["self"],["ascii"]],[[R[96]],[R[34],[R[96]]]]]],[11,"drop",R[186],E,14,[[["self"]]]],[11,"clone",E,E,6,[[["self"]],["self"]]],[11,"clone",E,E,8,[[["self"]],["restapi"]]],[11,"clone",E,E,13,[[["self"]],[R[176]]]],[11,"eq",E,E,8,[[["self"],["restapi"]],["bool"]]],[11,"from",E,E,7,[[[R[62]]],["self"]]],[11,"from",E,E,7,[[[R[62],["body"]],["body"]],["self"]]],[11,"from",E,E,7,[[["body"],[R[9],["body"]]],["self"]]],[11,"fmt",E,E,5,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,8,[[["self"],[R[55]]],[R[28]]]],[11,"call",E,E,9,[[["self"],[R[9]]]]],[11,"new",E,R[177],15,[[[R[98]],["str"],[T]],["origin"]]],[11,"parse",E,R[178],15,[[["str"]],["origin"]]],[11,"map",E,R[220],3,[[["f"]],[R[84]]]],[11,"new",R[202],E,16,[[["s"]],["ascii"]]],[11,R[224],E,E,16,[[],["unicase"]]],[11,R[225],E,E,16,[[],["s"]]],[11,"new",R[186],R[179],17,[[["str"],[T]],["host"]]],[11,"parse",E,R[180],17,[[["str"]],["host"]]],[11,"new",E,R[222],18,[[["s"]],["suspendablestream"]]]],"p":[[4,R[102]],[4,R[103]],[4,R[104]],[4,R[105]],[4,R[106]],[3,R[77]],[3,"Rpc"],[4,R[204]],[4,"RestApi"],[3,R[205]],[8,R[184]],[8,R[150]],[3,R[139]],[3,R[182]],[3,"Server"],[3,"Origin"],[3,"Ascii"],[3,"Host"],[3,R[110]]]};
searchIndex["jsonrpc_ipc_server"]={"doc":"Cross-platform JSON-RPC IPC transport.","i":[[3,R[232],"jsonrpc_ipc_server","A NOOP struct for bringing the API between Windows and…",N,N],[6,R[157],E,R[158],N,N],[8,R[109],E,R[159],N,N],[10,R[160],E,R[161],0,[[["self"],["u64"]]]],[10,R[162],E,R[163],0,[[["self"],["u64"]]]],[4,R[111],E,R[140],N,N],[13,"Empty",E,R[141],1,N],[13,"Byte",E,R[142],1,N],[3,R[185],E,"Noop-extractor",N,N],[3,R[147],E,R[164],N,N],[12,R[239],E,"Session ID",2,N],[12,"endpoint_addr",E,"Remote UDS endpoint",2,N],[12,"sender",E,"Direct pipe sender",2,N],[3,R[182],E,"`CloseHandle` allows one to stop an `IpcServer` remotely.",N,N],[3,"Server",E,"IPC Server handle",N,N],[3,R[139],E,"IPC server builder",N,N],[11,"new",E,"Creates new IPC server build given the `IoHandler`.",3,[[[T]],[R[230]]]],[11,R[168],E,"Creates new IPC server build given the `IoHandler` and…",3,[[[T],["e"]],[R[230]]]],[11,R[170],E,"Sets shared different event loop executor.",3,[[[R[88]]],["self"]]],[11,"event_loop_reactor",E,"Sets different event loop I/O reactor.",3,[[["handle"]],["self"]]],[11,R[171],E,"Sets session metadata extractor.",3,[[["x"]],["self"]]],[11,R[240],E,R[241],3,[[[R[172]]],["self"]]],[11,R[233],E,R[234],3,[[[R[101]]],["self"]]],[11,"set_security_attributes",E,"Sets the security attributes for the underlying IPC…",3,[[[R[231]]],["self"]]],[11,"set_client_buffer_size",E,"Sets how many concurrent requests per client can be…",3,[[["usize"]],["self"]]],[11,"start",E,"Creates a new server from the given endpoint.",3,[[["str"]],[["server"],[R[28],["server"]]]]],[11,"close",E,R[235],4,[[]]],[11,R[226],E,"Creates a close handle that can be used to stop the server…",4,[[["self"]],[R[176]]]],[11,"wait",E,R[236],4,[[]]],[11,"close",E,"`close` closes the corresponding `IpcServer` instance.",5,[[]]],[8,R[150],E,R[237],N,N],[10,"extract",E,R[238],6,[[["self"],[R[175]]],["m"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[40],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[40],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[59],E,E,1,[[],[R[101]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"clone",E,E,1,[[["self"]],[R[101]]]],[11,"extract",E,E,8,[[["self"],[R[175]]],["m"]]],[11,"clone",E,E,5,[[["self"]],[R[176]]]],[11,"fmt",E,E,4,[[["self"],[R[55]]],[R[28]]]],[11,"empty",E,"New default security attributes.",7,[[],[R[231]]]],[11,"allow_everyone_connect",E,"New security attributes that allow everyone to connect.",7,[[],[[R[231]],["error"],[R[28],[R[231],"error"]]]]],[11,"allow_everyone_create",E,"New security attributes that allow everyone to create.",7,[[],[[R[231]],["error"],[R[28],[R[231],"error"]]]]]],"p":[[8,R[109]],[4,R[111]],[3,R[147]],[3,R[139]],[3,"Server"],[3,R[182]],[8,R[150]],[3,R[232]],[3,R[185]]]};
searchIndex["jsonrpc_pubsub"]={"doc":"Publish-Subscribe extension for JSON-RPC","i":[[3,R[74],R[117],"Wire up rpc subscriptions to `delegate` struct",N,N],[3,R[135],E,"Publish-Subscribe extension of `IoHandler`.",N,N],[3,"Session",E,"RPC client session Keeps track of active subscriptions and…",N,N],[3,"Sink",E,"A handle to send notifications directly to subscribed…",N,N],[3,R[121],E,"Represents a subscribing client. Subscription handlers can…",N,N],[4,R[134],E,"Unique subscription id. NOTE Assigning same id to…",N,N],[13,"Number",E,"U64 number",0,N],[13,"String",E,"String",0,N],[5,"new_subscription",E,"Creates new subscribe and unsubscribe RPC methods",N,[[["g"],["str"],["f"]]]],[11,"new",E,"Creates new `PubSubIoDelegate`, wrapping the core IoDelegate",1,[[["arc"]],["self"]]],[11,R[116],E,"Adds subscription to the delegate.",1,[[["self"],["str"]]]],[11,R[14],E,"Adds an alias to existing method.",1,[[["self"],["str"]]]],[11,R[15],E,R[113],1,[[["self"],["str"],["f"]]]],[11,R[16],E,R[114],1,[[["self"],["str"],["f"]]]],[11,R[17],E,R[115],1,[[["self"],["str"],["f"]]]],[11,"new",E,"Creates new `PubSubHandler`",2,[[[R[56]]],["self"]]],[11,R[116],E,"Adds new subscription.",2,[[["self"],["str"]]]],[0,"oneshot",E,"A futures oneshot channel that can be used for rendezvous.",N,N],[3,"Sender",R[129],"A sender part of the channel.",N,N],[3,"Receiver",E,"Receiving end of the channel.",N,N],[5,"channel",E,"Create a new future-base rendezvous channel.",N,[[]]],[11,"send",E,"Consume the sender and queue up an item to send.",3,[[[T]],[R[28]]]],[11,"send_and_wait",E,"Consume the sender and send an item.",3,[[[T]]]],[11,"new",R[117],"Creates new session given transport raw send capabilities.…",4,[[["sender",[R[1]]],[R[1]]],["self"]]],[11,"sender",E,"Returns transport write stream",4,[[["self"]],[["sender",[R[1]]],[R[1]]]]],[11,"on_drop",E,"Adds a function to call when session is dropped.",4,[[["self"],["send"],["fnonce"]]]],[11,"notify",E,"Sends a notification to a client.",5,[[["self"],[R[37]]],[R[127]]]],[11,"new_test",E,"Creates new subscriber.",6,[[[R[1]],["into",[R[1]]]]]],[11,R[124],E,R[118],6,[[[R[119]]],[[R[28],["sink"]],["sink"]]]],[11,R[125],E,R[118],6,[[[R[119]]]]],[11,"reject",E,R[120],6,[[["error"]],[R[28]]]],[11,R[122],E,R[120],6,[[["error"]]]],[0,"typed",E,"PUB-SUB auto-serializing structures.",N,N],[3,R[121],R[130],"New PUB-SUB subscriber.",N,N],[3,"Sink",E,"Subscriber sink.",N,N],[11,"new",E,"Wrap non-typed subscriber.",7,[[[R[128]]],["self"]]],[11,"new_test",E,"Create new subscriber for tests.",7,[[[R[1]],["into",[R[1]]]]]],[11,"reject",E,R[123],7,[[["error"]],[R[28]]]],[11,R[122],E,R[123],7,[[["error"]]]],[11,R[124],E,R[126],7,[[[R[119]]],[["sink"],[R[28],["sink"]]]]],[11,R[125],E,R[126],7,[[[R[119]]]]],[11,"notify",E,"Sends a notification to the subscriber.",8,[[["self"],[R[28]]],[R[127]]]],[11,"parse_value",R[117],"Parses `core::Value` into unique subscription id.",0,[[["value"]],[[R[119]],[R[34],[R[119]]]]]],[6,"SinkResult",E,"Subscription send result.",N,N],[6,"TransportError",E,"Raw transport error.",N,N],[8,R[136],E,"Subscribe handler",N,N],[10,"call",E,"Called when client is requesting new subscription to be…",9,[[["self"],[R[37]],[R[128]],["m"]]]],[8,R[137],E,"Unsubscribe handler",N,N],[16,"Out",E,"Output type",10,N],[10,"call",E,"Called when client is requesting to cancel existing…",10,[[["self"],[R[34]],[R[119]]]]],[8,R[138],E,"Metadata extension for pub-sub method handling.",N,N],[10,"session",E,"Returns session object associated with given…",11,[[["self"]],[["arc",["session"]],[R[34],["arc"]]]]],[11,R[58],E,E,1,[[],["i"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[40],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[[U]],[R[28]]]],[11,R[42],E,E,6,[[],[R[28]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[47]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[40],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,"from",R[129],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[[U]],[R[28]]]],[11,R[42],E,E,12,[[],[R[28]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"]],[R[47]]]],[11,R[251],E,E,12,[[],["f"]]],[11,"from",R[130],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,R[39],E,E,8,[[["self"]],[T]]],[11,R[40],E,E,8,[[["self"],[T]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,"drop",R[117],E,4,[[["self"]]]],[11,R[58],E,E,1,[[]]],[11,R[59],E,E,2,[[],["self"]]],[11,"clone",E,E,5,[[["self"]],["sink"]]],[11,"clone",R[130],E,8,[[["self"]],["sink"]]],[11,"clone",R[117],E,0,[[["self"]],[R[119]]]],[11,"eq",E,E,0,[[["self"],[R[119]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[119]]],["bool"]]],[11,"from",E,E,0,[[[R[1]]],["self"]]],[11,"from",E,E,0,[[["u64"]],["self"]]],[11,"into",E,E,2,[[],[R[56]]]],[11,"deref",E,E,2,[[["self"]]]],[11,"deref",R[129],E,3,[[["self"]]]],[11,R[94],R[117],E,2,[[["self"]]]],[11,R[94],R[129],E,3,[[["self"]]]],[11,"hash",R[117],E,0,[[["self"],["__h"]]]],[11,"fmt",R[129],E,3,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,12,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[117],E,4,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,5,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,6,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[130],E,7,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,8,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[117],E,0,[[["self"],[R[55]]],[R[28]]]],[11,"poll",R[129],E,12,[[["self"]],["poll"]]],[11,R[57],R[117],E,1,[[[R[56]]]]],[11,R[131],E,E,5,[[["self"]],[R[132]]]],[11,R[133],E,E,5,[[["self"]],["poll"]]],[11,"close",E,E,5,[[["self"]],["poll"]]],[11,R[131],R[130],E,8,[[["self"]],[R[132]]]],[11,R[133],E,E,8,[[["self"]],["poll"]]],[11,"close",E,E,8,[[["self"]],["poll"]]]],"p":[[4,R[134]],[3,R[74]],[3,R[135]],[3,"Sender"],[3,"Session"],[3,"Sink"],[3,R[121]],[3,R[121]],[3,"Sink"],[8,R[136]],[8,R[137]],[8,R[138]],[3,"Receiver"]]};
searchIndex["jsonrpc_pubsub_examples"]={"doc":E,"i":[],"p":[]};
searchIndex["jsonrpc_server_utils"]={"doc":"JSON-RPC servers utilities.","i":[[3,R[110],R[85],R[206],N,N],[0,"cors",E,R[207],N,N],[3,"Ascii",R[90],R[208],N,N],[3,"Origin",E,R[151],N,N],[4,R[102],E,R[209],N,N],[13,"Http",E,R[210],0,N],[13,"Https",E,R[211],0,N],[13,"Custom",E,R[212],0,N],[4,R[103],E,R[187],N,N],[13,"Value",E,R[188],1,N],[13,"Null",E,R[189],1,N],[13,"Any",E,R[190],1,N],[4,R[104],E,R[213],N,N],[13,"Only",E,R[214],2,N],[13,"Any",E,R[215],2,N],[4,R[105],E,R[191],N,N],[13,R[192],E,R[193],3,N],[13,"Invalid",E,R[194],3,N],[13,"Ok",E,R[195],3,N],[5,R[216],E,R[217],N,[[[R[34],["str"]],[R[34]],["str"]],[[R[84],[R[83]]],[R[83]]]]],[5,R[218],E,R[219],N,[[["fn"],[R[99]]],[[R[84],["vec"]],["vec"]]]],[11,"new",E,R[177],4,[[["port"],["into",["port"]],[R[98]],["str"]],["self"]]],[11,"parse",E,R[178],4,[[["str"]],["self"]]],[11,"map",E,R[220],3,[[["f"]],[R[84]]]],[0,"hosts",R[85],"Host header validation.",N,N],[3,"Host",R[91],R[156],N,N],[4,"Port",E,"Port pattern",N,N],[13,"None",E,"No port specified (default port)",5,N],[13,"Pattern",E,"Port specified as a wildcard pattern",5,N],[13,"Fixed",E,"Fixed numeric port",5,N],[4,R[106],E,R[152],N,N],[13,R[153],E,R[154],6,N],[13,R[221],E,R[155],6,N],[5,"is_host_valid",E,"Returns `true` when `Host` header is whitelisted in…",N,[[[R[34],["str"]],["str"],[R[34]]],["bool"]]],[5,"update",E,"Updates given list of hosts with the address.",N,[[[R[34],["vec"]],[R[143]],["vec",["host"]]],[["vec",["host"]],[R[34],["vec"]]]]],[11,"new",E,R[179],7,[[["into",["port"]],["str"],["port"]],["self"]]],[11,"parse",E,R[180],7,[[["str"]],["self"]]],[0,"reactor",R[85],"Event Loop Executor Either spawns a new event loop, or…",N,N],[3,R[108],R[92],"A handle to running event loop. Dropping the handle will…",N,N],[4,R[107],E,"Possibly uninitialized event loop executor.",N,N],[13,"Shared",E,"Shared instance of executor.",8,N],[13,"Unspawned",E,"Event Loop should be spawned by the transport.",8,N],[4,"Executor",E,"Initialized Executor",N,N],[13,"Shared",E,"Shared instance",9,N],[13,"Spawned",E,"Spawned Event Loop",9,N],[11,"initialize",E,R[87],8,[[],[[R[86]],[R[28],[R[86]]]]]],[11,"init_with_name",E,R[87],8,[[[R[1]],["into",[R[1]]]],[[R[86]],[R[28],[R[86]]]]]],[11,R[86],E,"Get tokio executor associated with this event loop.",9,[[["self"]],[R[88]]]],[11,"spawn",E,"Spawn a future onto the Tokio runtime.",9,[[["self"],["f"]]]],[11,"close",E,"Closes underlying event loop (if any!).",9,[[]]],[11,"wait",E,"Wait for underlying event loop to finish (if any!).",9,[[]]],[11,"spawn",E,"Spawns a new thread with the `EventLoop`.",10,[[],[R[28]]]],[11,"with_name",E,"Spawns a new named thread with the `EventLoop`.",10,[[[R[1]],[R[34],[R[1]]]],[R[28]]]],[11,R[86],E,"Get executor for this event loop.",10,[[["self"]],[R[88]]]],[11,"wait",E,"Blocks current thread and waits until the event loop is…",10,[[],[R[28]]]],[11,"close",E,"Finishes this event loop.",10,[[]]],[0,"session",R[85],"Session statistics.",N,N],[6,R[157],"jsonrpc_server_utils::session",R[158],N,N],[8,R[109],E,R[159],N,N],[10,R[160],E,R[161],11,[[["self"],[R[89]]]]],[10,R[162],E,R[163],11,[[["self"],[R[89]]]]],[11,"new",R[85],R[222],12,[[["s"]],["self"]]],[0,"codecs",E,"Codecs utilities",N,N],[3,R[112],R[93],"Stream codec for streaming protocols (ipc, tcp)",N,N],[4,R[111],E,R[140],N,N],[13,"Empty",E,R[141],13,N],[13,"Byte",E,R[142],13,N],[8,"Pattern",R[85],"Pattern that can be matched to string.",N,N],[10,R[97],E,"Returns true if given string matches the pattern.",14,[[["self"],["str"],["asref",["str"]]],["bool"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[[U]],[R[28]]]],[11,R[42],E,E,12,[[],[R[28]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"]],[R[47]]]],[11,R[39],R[90],E,15,[[["self"]],[T]]],[11,R[40],E,E,15,[[["self"],[T]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[49],E,E,15,[[["self"]],[R[1]]]],[11,R[41],E,E,15,[[[U]],[R[28]]]],[11,R[42],E,E,15,[[],[R[28]]]],[11,R[46],E,E,15,[[["self"]],[T]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"]],[R[47]]]],[11,R[39],E,E,4,[[["self"]],[T]]],[11,R[40],E,E,4,[[["self"],[T]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[40],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,R[39],E,E,1,[[["self"]],[T]]],[11,R[40],E,E,1,[[["self"],[T]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[49],E,E,1,[[["self"]],[R[1]]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,R[39],E,E,2,[[["self"]],[T]]],[11,R[40],E,E,2,[[["self"],[T]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[40],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,R[39],R[91],E,7,[[["self"]],[T]]],[11,R[40],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,R[39],E,E,5,[[["self"]],[T]]],[11,R[40],E,E,5,[[["self"],[T]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[40],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[[U]],[R[28]]]],[11,R[42],E,E,6,[[],[R[28]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[47]]]],[11,"from",R[92],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[[U]],[R[28]]]],[11,R[42],E,E,10,[[],[R[28]]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"]],[R[47]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[[U]],[R[28]]]],[11,R[42],E,E,9,[[],[R[28]]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"]],[R[47]]]],[11,"from",R[93],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[[U]],[R[28]]]],[11,R[42],E,E,16,[[],[R[28]]]],[11,R[46],E,E,16,[[["self"]],[T]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"]],[R[47]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[40],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[[U]],[R[28]]]],[11,R[42],E,E,13,[[],[R[28]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"]],[R[47]]]],[11,R[59],R[90],E,15,[[],["ascii"]]],[11,"hash",E,E,15,[[["self"],["h"]]]],[11,"cmp",E,E,15,[[["self"],["ascii"]],[R[96]]]],[11,"fmt",E,E,15,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"as_ref",E,E,15,[[["self"]],["str"]]],[11,"clone",E,E,15,[[["self"]],["ascii"]]],[11,"eq",E,E,15,[[["self"],["s2"]],["bool"]]],[11,"fmt",E,E,15,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,R[94],E,E,15,[[["self"]],["s"]]],[11,"deref",E,E,15,[[["self"]],["s"]]],[11,R[95],E,E,15,[[["str"]],[["ascii"],[R[28],["ascii"]]]]],[11,R[223],E,E,15,[[["self"],["ascii"]],[[R[96]],[R[34],[R[96]]]]]],[11,R[97],E,E,4,[[["self"],["str"],["asref",["str"]]],["bool"]]],[11,R[97],R[91],E,7,[[["self"],["str"],["asref",["str"]]],["bool"]]],[11,"drop",R[92],E,10,[[["self"]]]],[11,R[59],R[93],E,13,[[],["self"]]],[11,R[59],E,E,16,[[],["streamcodec"]]],[11,"clone",R[90],E,0,[[["self"]],[R[98]]]],[11,"clone",E,E,4,[[["self"]],["origin"]]],[11,"clone",E,E,1,[[["self"]],[R[83]]]],[11,"clone",E,E,2,[[["self"]],[R[99]]]],[11,"clone",E,E,3,[[["self"]],[R[84]]]],[11,"clone",R[91],E,5,[[["self"]],["port"]]],[11,"clone",E,E,7,[[["self"]],["host"]]],[11,"clone",E,E,6,[[["self"]],[R[100]]]],[11,"clone",R[93],E,13,[[["self"]],[R[101]]]],[11,"eq",R[90],E,0,[[["self"],[R[98]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[98]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["origin"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["origin"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[83]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[83]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[99]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[99]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[84]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[84]]],["bool"]]],[11,"eq",R[91],E,5,[[["self"],["port"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["port"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["host"]],["bool"]]],[11,"ne",E,E,7,[[["self"],["host"]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[100]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[100]]],["bool"]]],[11,"from",R[90],E,4,[[[T]],["self"]]],[11,"from",E,E,1,[[[T]],[R[83]]]],[11,"from",R[91],E,5,[[["u16"],[R[34],["u16"]]],["self"]]],[11,"from",E,E,5,[[["u16"]],["port"]]],[11,"from",E,E,7,[[[T]],["self"]]],[11,"from",E,E,6,[[[R[34],["vec"]],["vec"]],["self"]]],[11,"into",R[90],E,3,[[],[R[34]]]],[11,"into",R[91],E,6,[[],[[R[34],["vec"]],["vec"]]]],[11,"deref",R[90],E,4,[[["self"]]]],[11,"deref",R[91],E,7,[[["self"]]]],[11,"hash",R[90],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",R[91],E,5,[[["self"],["__h"]]]],[11,"hash",E,E,7,[[["self"],["__h"]]]],[11,"fmt",R[90],E,1,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,0,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,4,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,2,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,3,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[91],E,5,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,7,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,6,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[92],E,8,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,9,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,10,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",R[93],E,13,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,16,[[["self"],[R[55]]],[R[28]]]],[11,"poll",R[85],E,12,[[["self"]],[[R[28],["async"]],["async",[R[34]]]]]],[11,"encode",R[93],E,16,[[["self"],[R[1]],["bytesmut"]],[R[28]]]],[11,"decode",E,E,16,[[["self"],["bytesmut"]],[[R[34]],[R[28],[R[34]]]]]],[11,"new",R[90],E,15,[[["s"]],["ascii"]]],[11,R[224],E,E,15,[[],["unicase"]]],[11,R[225],E,E,15,[[],["s"]]],[11,"stream_incoming",R[93],"Default codec with streaming input data. Input can be both…",16,[[],["self"]]],[11,"new",E,"New custom stream codec",16,[[[R[101]]],["self"]]]],"p":[[4,R[102]],[4,R[103]],[4,R[104]],[4,R[105]],[3,"Origin"],[4,"Port"],[4,R[106]],[3,"Host"],[4,R[107]],[4,"Executor"],[3,R[108]],[8,R[109]],[3,R[110]],[4,R[111]],[8,"Pattern"],[3,"Ascii"],[3,R[112]]]};
searchIndex["jsonrpc_stdio_server"]={"doc":"jsonrpc server using stdin/stdout","i":[[3,R[139],"jsonrpc_stdio_server","Stdio server builder",N,N],[11,"new",E,"Returns a new server instance",0,[[[T]],["self"]]],[11,"build",E,"Will block until EOF is read or until an error occurs. The…",0,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]]],"p":[[3,R[139]]]};
searchIndex["jsonrpc_tcp_server"]={"doc":"jsonrpc server over tcp/ip","i":[[4,R[111],"jsonrpc_tcp_server",R[140],N,N],[13,"Empty",E,R[141],0,N],[13,"Byte",E,R[142],0,N],[3,R[149],E,"Peer-messages dispatcher.",N,N],[3,R[147],E,R[164],N,N],[12,"peer_addr",E,"Peer Address",1,N],[12,"sender",E,"Peer Sender channel",1,N],[3,"Server",E,"TCP Server handle",N,N],[3,R[139],E,"TCP server builder",N,N],[4,R[148],E,"Push Message Error",N,N],[13,"NoSuchPeer",E,"Invalid peer",2,N],[13,"Send",E,"Send error",2,N],[11,"new",E,"Creates a new dispatcher",3,[[["mutex",["hashmap"]],["arc",["mutex"]]],["self"]]],[11,"push_message",E,"Pushes message to given peer",3,[[["self"],[R[1]],[R[143]]],[[R[28],[R[144]]],[R[144]]]]],[11,"is_connected",E,"Returns `true` if the peer is still connnected",3,[[["self"],[R[143]]],["bool"]]],[11,"peer_count",E,"Returns current peer count.",3,[[["self"]],["usize"]]],[11,"new",E,R[145],4,[[[T]],["self"]]],[11,R[168],E,R[145],4,[[[T],["e"]],["self"]]],[11,R[170],E,"Utilize existing event loop executor.",4,[[[R[88]]],["self"]]],[11,R[171],E,"Sets session meta extractor",4,[[[R[167]]],["self"]]],[11,R[233],E,R[234],4,[[[R[101]]],["self"]]],[11,"start",E,"Starts a new server",4,[[[R[143]]],[[R[28],["server"]],["server"]]]],[11,R[146],E,"Returns dispatcher",4,[[["self"]],[R[146]]]],[11,"close",E,R[235],5,[[]]],[11,"wait",E,R[236],5,[[]]],[8,R[150],E,R[237],N,N],[10,"extract",E,R[238],6,[[["self"],[R[175]]],["m"]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[40],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,R[39],E,E,3,[[["self"]],[T]]],[11,R[40],E,E,3,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,R[59],E,E,0,[[],[R[101]]]],[11,"fmt",E,E,0,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"clone",E,E,0,[[["self"]],[R[101]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"clone",E,E,3,[[["self"]],[R[146]]]],[11,"from",E,E,2,[[["senderror",[R[1]]],[R[1]]],["self"]]],[11,"fmt",E,E,2,[[["self"],[R[55]]],[R[28]]]]],"p":[[4,R[111]],[3,R[147]],[4,R[148]],[3,R[149]],[3,R[139]],[3,"Server"],[8,R[150]]]};
searchIndex["jsonrpc_test"]={"doc":"An utility package to test jsonrpc-core based projects.","i":[[3,"Options","jsonrpc_test","Test RPC options.",N,N],[12,"no_print",E,"Disable printing requests and responses.",0,N],[3,"Rpc",E,"RPC instance.",N,N],[12,"io",E,"Underlying `IoHandler`.",1,N],[12,"options",E,"Options",1,N],[4,"Encoding",E,"Encoding format.",N,N],[13,"Compact",E,"Encodes params using `serde::to_string`.",2,N],[13,"Pretty",E,"Encodes params using `serde::to_string_pretty`.",2,N],[11,"new",E,"Create a new RPC instance from a single delegate.",1,[[["d"]],["self"]]],[11,R[9],E,"Perform a single, synchronous method call and return…",1,[[["self"],["str"],[T]],[R[1]]]],[11,"make_request",E,"Perform a single, synchronous method call.",1,[[["self"],["encoding"],["str"],[T]],[R[1]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[[U]],[R[28]]]],[11,R[42],E,E,1,[[],[R[28]]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[47]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,R[59],E,E,0,[[],["options"]]],[11,R[59],E,E,1,[[],["rpc"]]],[11,"from",E,E,1,[[[R[60]]],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[28]]]]],"p":[[3,"Options"],[3,"Rpc"],[4,"Encoding"]]};
searchIndex["jsonrpc_ws_server"]={"doc":"`WebSockets` server.","i":[[3,"Origin",R[165],R[151],N,N],[4,R[106],E,R[152],N,N],[13,R[153],E,R[154],0,N],[13,R[221],E,R[155],0,N],[3,"Host",E,R[156],N,N],[6,R[157],E,R[158],N,N],[8,R[109],E,R[159],N,N],[10,R[160],E,R[161],1,[[["self"],["u64"]]]],[10,R[162],E,R[163],1,[[["self"],["u64"]]]],[3,R[185],E,"Dummy metadata extractor",N,N],[3,R[147],E,R[164],N,N],[12,R[239],E,R[158],2,N],[12,"origin",E,R[151],2,N],[12,"protocols",E,"Requested protocols",2,N],[12,"out",E,"Direct channel to send messages to a client.",2,N],[12,R[86],E,"Remote to underlying event loop.",2,N],[3,R[183],E,"A Broadcaster that can be used to send messages on all…",N,N],[3,R[182],E,"A handle that allows closing of a server even if it owned…",N,N],[3,"Server",E,"`WebSockets` server implementation.",N,N],[3,R[139],E,"Builder for `WebSockets` server",N,N],[4,"Error",E,"WebSockets Server Error",N,N],[13,"Io",E,"Io Error",3,N],[13,"WsError",E,"WebSockets Error",3,N],[13,"ConnectionClosed",E,"Connection Closed",3,N],[4,R[181],E,"Request middleware action",N,N],[13,"Proceed",E,"Proceed with standard JSON-RPC behaviour.",4,N],[13,"Respond",E,"Terminate the request and return a response.",4,N],[12,R[62],"jsonrpc_ws_server::MiddlewareAction","Response to return",4,N],[12,"validate_origin",E,"Should origin be validated before returning the response?",4,N],[12,"validate_hosts",E,"Should hosts be validated before returning the response?",4,N],[11,"sender",R[165],"Get this session as a `Sink` spawning a new future in the…",2,[[["self"]],[[R[1]],["sender",[R[1]]]]]],[11,"addr",E,"Returns the address this server is listening on",5,[[["self"]],[R[143]]]],[11,R[166],E,"Returns a Broadcaster that can be used to send messages on…",5,[[["self"]],[R[166]]]],[11,"start",E,R[174],5,[[[R[34],["vec"]],[R[56]],[R[34],["arc"]],[R[143]],["arc",[R[56]]],["arc",[R[173]]],[R[34],["arc"]],["vec",["host"]],["arc",[R[167]]],[R[167]],["arc",[R[172]]],["usize"],[R[34],["vec"]],["uninitializedexecutor"],["vec",["origin"]]],[[R[28],["server"]],["server"]]]],[11,"wait",E,"Consumes the server and waits for completion",5,[[],[R[28]]]],[11,"close",E,"Closes the server and waits for it to finish",5,[[]]],[11,R[226],E,"Returns a handle to the server that can be used to close…",5,[[["self"]],[R[176]]]],[11,"close",E,"Closes the `Server`.",6,[[]]],[11,"send",E,"Send a message to the endpoints of all connections.",7,[[["self"],["m"]],[R[28]]]],[11,"new",E,R[169],8,[[[T]],["self"]]],[11,R[168],E,R[169],8,[[[T],["e"]],["self"]]],[11,R[170],E,R[227],8,[[[R[88]]],["self"]]],[11,R[171],E,"Sets a meta extractor.",8,[[[R[167]]],["self"]]],[11,"allowed_origins",E,"Allowed origins.",8,[[["origin"],[R[100],["origin"]]],["self"]]],[11,R[228],E,"Allowed hosts.",8,[[["host"],[R[100],["host"]]],["self"]]],[11,R[240],E,R[241],8,[[[R[172]]],["self"]]],[11,R[229],E,"Sets a request middleware. Middleware will be invoked…",8,[[[R[173]]],["self"]]],[11,"max_connections",E,"Maximal number of concurrent connections this server…",8,[[["usize"]],["self"]]],[11,"max_payload",E,"Maximal size of the payload (in bytes) Default: 5MB",8,[[["usize"]],["self"]]],[11,"start",E,R[174],8,[[[R[143]]],[[R[28],["server"]],["server"]]]],[6,"Result",E,"WebSockets Server Result",N,N],[8,R[150],E,"Metadata extractor from session data.",N,N],[10,"extract",E,"Extract metadata for given session",9,[[["self"],[R[175]]],["m"]]],[8,R[184],E,"Middleware to intercept server requests. You can either…",N,N],[10,"process",E,"Process a request and decide what to do next.",10,[[["self"],[R[9]]],["middlewareaction"]]],[11,R[39],E,E,11,[[["self"]],[T]]],[11,R[40],E,E,11,[[["self"],[T]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[[U]],[R[28]]]],[11,R[42],E,E,11,[[],[R[28]]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"]],[R[47]]]],[11,R[39],E,E,0,[[["self"]],[T]]],[11,R[40],E,E,0,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[28]]]],[11,R[42],E,E,0,[[],[R[28]]]],[11,R[46],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[47]]]],[11,R[39],E,E,12,[[["self"]],[T]]],[11,R[40],E,E,12,[[["self"],[T]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[[U]],[R[28]]]],[11,R[42],E,E,12,[[],[R[28]]]],[11,R[46],E,E,12,[[["self"]],[T]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"]],[R[47]]]],[11,R[39],E,E,13,[[["self"]],[T]]],[11,R[40],E,E,13,[[["self"],[T]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[[U]],[R[28]]]],[11,R[42],E,E,13,[[],[R[28]]]],[11,R[46],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"]],[R[47]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[41],E,E,2,[[[U]],[R[28]]]],[11,R[42],E,E,2,[[],[R[28]]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[44],E,E,2,[[["self"]],[R[47]]]],[11,R[39],E,E,7,[[["self"]],[T]]],[11,R[40],E,E,7,[[["self"],[T]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[28]]]],[11,R[42],E,E,7,[[],[R[28]]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[47]]]],[11,R[39],E,E,6,[[["self"]],[T]]],[11,R[40],E,E,6,[[["self"],[T]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[[U]],[R[28]]]],[11,R[42],E,E,6,[[],[R[28]]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[47]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[28]]]],[11,R[42],E,E,5,[[],[R[28]]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[47]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[28]]]],[11,R[42],E,E,8,[[],[R[28]]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[47]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[49],E,E,3,[[["self"]],[R[1]]]],[11,R[41],E,E,3,[[[U]],[R[28]]]],[11,R[42],E,E,3,[[],[R[28]]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[44],E,E,3,[[["self"]],[R[47]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[28]]]],[11,R[42],E,E,4,[[],[R[28]]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[47]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",E,E,12,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"fmt",E,E,11,[[["self"],[R[55]]],[["error"],[R[28],["error"]]]]],[11,"into",E,E,0,[[],[[R[34],["vec"]],["vec"]]]],[11,"clone",E,E,11,[[["self"]],["origin"]]],[11,"clone",E,E,12,[[["self"]],["host"]]],[11,"clone",E,E,0,[[["self"]],[R[100]]]],[11,R[97],E,E,12,[[["self"],[T]],["bool"]]],[11,R[97],E,E,11,[[["self"],[T]],["bool"]]],[11,"from",E,E,11,[[[T]],["origin"]]],[11,"from",E,E,0,[[[R[34],["vec"]],["vec"]],[R[100]]]],[11,"from",E,E,12,[[[T]],["host"]]],[11,"eq",E,E,12,[[["self"],["host"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["host"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[100]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[100]]],["bool"]]],[11,"eq",E,E,11,[[["self"],["origin"]],["bool"]]],[11,"ne",E,E,11,[[["self"],["origin"]],["bool"]]],[11,"deref",E,E,11,[[["self"]]]],[11,"deref",E,E,12,[[["self"]]]],[11,"extract",E,E,13,[[["self"],[R[175]]],["m"]]],[11,"drop",E,E,5,[[["self"]]]],[11,"clone",E,E,13,[[["self"]],["noopextractor"]]],[11,"clone",E,E,6,[[["self"]],[R[176]]]],[11,"clone",E,E,7,[[["self"]],[R[166]]]],[11,"from",E,E,3,[[["error"]],["self"]]],[11,"from",E,E,3,[[["error"]],["self"]]],[11,"from",E,E,4,[[[R[62]],[R[34],[R[62]]]],["self"]]],[11,"fmt",E,E,3,[[["self"],[R[55]]],[[R[28],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,2,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,13,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,5,[[["self"],[R[55]]],[R[28]]]],[11,"fmt",E,E,4,[[["self"],[R[55]]],[R[28]]]],[11,"source",E,E,3,[[["self"]],[[R[34],["error"]],["error"]]]],[11,"new",E,R[177],11,[[[R[98]],["str"],[T]],["origin"]]],[11,"parse",E,R[178],11,[[["str"]],["origin"]]],[11,"new",E,R[179],12,[[["str"],[T]],["host"]]],[11,"parse",E,R[180],12,[[["str"]],["host"]]]],"p":[[4,R[106]],[8,R[109]],[3,R[147]],[4,"Error"],[4,R[181]],[3,"Server"],[3,R[182]],[3,R[183]],[3,R[139]],[8,R[150]],[8,R[184]],[3,"Origin"],[3,"Host"],[3,R[185]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);